[33mcommit 8903669d01268786e0c6e50bcb1f8ee42b9d230e[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Jana Bergant <jana.bergant@gmail.com>
Date:   Tue Aug 7 10:09:36 2018 +0200

    start code for Udemy course messenger chatbot

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100755[m
[1mindex 0000000..25a9cea[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mnode_modules/[m
[32m+[m[32mtoken[m
[32m+[m[32m.DS_Store[m
[32m+[m[32m.idea[m
[1mdiff --git a/Procfile b/Procfile[m
[1mnew file mode 100755[m
[1mindex 0000000..207d22f[m
[1m--- /dev/null[m
[1m+++ b/Procfile[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mweb: node app.js[m
\ No newline at end of file[m
[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..90dfa5b[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m# Initial code for Udemy course [ChatBots: Messenger ChatBot - DialogFlow and nodejs](https://www.udemy.com/chatbots/?couponCode=GITHUB)[m
[32m+[m
[32m+[m
[1mdiff --git a/app.js b/app.js[m
[1mnew file mode 100755[m
[1mindex 0000000..9209a02[m
[1m--- /dev/null[m
[1m+++ b/app.js[m
[36m@@ -0,0 +1,866 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst dialogflow = require('dialogflow');[m
[32m+[m[32mconst config = require('./config');[m
[32m+[m[32mconst express = require('express');[m
[32m+[m[32mconst crypto = require('crypto');[m
[32m+[m[32mconst bodyParser = require('body-parser');[m
[32m+[m[32mconst request = require('request');[m
[32m+[m[32mconst app = express();[m
[32m+[m[32mconst uuid = require('uuid');[m
[32m+[m
[32m+[m
[32m+[m[32m// Messenger API parameters[m
[32m+[m[32mif (!config.FB_PAGE_TOKEN) {[m
[32m+[m[32m    throw new Error('missing FB_PAGE_TOKEN');[m
[32m+[m[32m}[m
[32m+[m[32mif (!config.FB_VERIFY_TOKEN) {[m
[32m+[m[32m    throw new Error('missing FB_VERIFY_TOKEN');[m
[32m+[m[32m}[m
[32m+[m[32mif (!config.GOOGLE_PROJECT_ID) {[m
[32m+[m[32m    throw new Error('missing GOOGLE_PROJECT_ID');[m
[32m+[m[32m}[m
[32m+[m[32mif (!config.DF_LANGUAGE_CODE) {[m
[32m+[m[32m    throw new Error('missing DF_LANGUAGE_CODE');[m
[32m+[m[32m}[m
[32m+[m[32mif (!config.GOOGLE_CLIENT_EMAIL) {[m
[32m+[m[32m    throw new Error('missing GOOGLE_CLIENT_EMAIL');[m
[32m+[m[32m}[m
[32m+[m[32mif (!config.GOOGLE_PRIVATE_KEY) {[m
[32m+[m[32m    throw new Error('missing GOOGLE_PRIVATE_KEY');[m
[32m+[m[32m}[m
[32m+[m[32mif (!config.FB_APP_SECRET) {[m
[32m+[m[32m    throw new Error('missing FB_APP_SECRET');[m
[32m+[m[32m}[m
[32m+[m[32mif (!config.SERVER_URL) { //used for ink to static files[m
[32m+[m[32m    throw new Error('missing SERVER_URL');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mapp.set('port', (process.env.PORT || 5000))[m
[32m+[m
[32m+[m[32m//verify request came from facebook[m
[32m+[m[32mapp.use(bodyParser.json({[m
[32m+[m[32m    verify: verifyRequestSignature[m
[32m+[m[32m}));[m
[32m+[m
[32m+[m[32m//serve static files in the public directory[m
[32m+[m[32mapp.use(express.static('public'));[m
[32m+[m
[32m+[m[32m// Process application/x-www-form-urlencoded[m
[32m+[m[32mapp.use(bodyParser.urlencoded({[m
[32m+[m[32m    extended: false[m
[32m+[m[32m}));[m
[32m+[m
[32m+[m[32m// Process application/json[m
[32m+[m[32mapp.use(bodyParser.json());[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mconst credentials = {[m
[32m+[m[32m    client_email: config.GOOGLE_CLIENT_EMAIL,[m
[32m+[m[32m    private_key: config.GOOGLE_PRIVATE_KEY,[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst sessionClient = new dialogflow.SessionsClient([m
[32m+[m[32m    {[m
[32m+[m[32m        projectId: config.GOOGLE_PROJECT_ID,[m
[32m+[m[32m        credentials[m
[32m+[m[32m    }[m
[32m+[m[32m);[m
[32m+[m
[32m+[m
[32m+[m[32mconst sessionIds = new Map();[m
[32m+[m
[32m+[m[32m// Index route[m
[32m+[m[32mapp.get('/', function (req, res) {[m
[32m+[m[32m    res.send('Hello world, I am a chat bot')[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32m// for Facebook verification[m
[32m+[m[32mapp.get('/webhook/', function (req, res) {[m
[32m+[m[32m    console.log("request");[m
[32m+[m[32m    if (req.query['hub.mode'] === 'subscribe' && req.query['hub.verify_token'] === config.FB_VERIFY_TOKEN) {[m
[32m+[m[32m        res.status(200).send(req.query['hub.challenge']);[m
[32m+[m[32m    } else {[m
[32m+[m[32m        console.error("Failed validation. Make sure the validation tokens match.");[m
[32m+[m[32m        res.sendStatus(403);[m
[32m+[m[32m    }[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m * All callbacks for Messenger are POST-ed. They will be sent to the same[m
[32m+[m[32m * webhook. Be sure to subscribe your app to your page to receive callbacks[m
[32m+[m[32m * for your page.[m[41m [m
[32m+[m[32m * https://developers.facebook.com/docs/messenger-platform/product-overview/setup#subscribe_app[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m[32mapp.post('/webhook/', function (req, res) {[m
[32m+[m[32m    var data = req.body;[m
[32m+[m[32m    console.log(JSON.stringify(data));[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m    // Make sure this is a page subscription[m
[32m+[m[32m    if (data.object == 'page') {[m
[32m+[m[32m        // Iterate over each entry[m
[32m+[m[32m        // There may be multiple if batched[m
[32m+[m[32m        data.entry.forEach(function (pageEntry) {[m
[32m+[m[32m            var pageID = pageEntry.id;[m
[32m+[m[32m            var timeOfEvent = pageEntry.time;[m
[32m+[m
[32m+[m[32m            // Iterate over each messaging event[m
[32m+[m[32m            pageEntry.messaging.forEach(function (messagingEvent) {[m
[32m+[m[32m                if (messagingEvent.optin) {[m
[32m+[m[32m                    receivedAuthentication(messagingEvent);[m
[32m+[m[32m                } else if (messagingEvent.message) {[m
[32m+[m[32m                    receivedMessage(messagingEvent);[m
[32m+[m[32m                } else if (messagingEvent.delivery) {[m
[32m+[m[32m                    receivedDeliveryConfirmation(messagingEvent);[m
[32m+[m[32m                } else if (messagingEvent.postback) {[m
[32m+[m[32m                    receivedPostback(messagingEvent);[m
[32m+[m[32m                } else if (messagingEvent.read) {[m
[32m+[m[32m                    receivedMessageRead(messagingEvent);[m
[32m+[m[32m                } else if (messagingEvent.account_linking) {[m
[32m+[m[32m                    receivedAccountLink(messagingEvent);[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    console.log("Webhook received unknown messagingEvent: ", messagingEvent);[m
[32m+[m[32m                }[m
[32m+[m[32m            });[m
[32m+[m[32m        });[m
[32m+[m
[32m+[m[32m        // Assume all went well.[m
[32m+[m[32m        // You must send back a 200, within 20 seconds[m
[32m+[m[32m        res.sendStatus(200);[m
[32m+[m[32m    }[m
[32m+[m[32m});[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mfunction receivedMessage(event) {[m
[32m+[m
[32m+[m[32m    var senderID = event.sender.id;[m
[32m+[m[32m    var recipientID = event.recipient.id;[m
[32m+[m[32m    var timeOfMessage = event.timestamp;[m
[32m+[m[32m    var message = event.message;[m
[32m+[m
[32m+[m[32m    if (!sessionIds.has(senderID)) {[m
[32m+[m[32m        sessionIds.set(senderID, uuid.v1());[m
[32m+[m[32m    }[m
[32m+[m[32m    //console.log("Received message for user %d and page %d at %d with message:", senderID, recipientID, timeOfMessage);[m
[32m+[m[32m    //console.log(JSON.stringify(message));[m
[32m+[m
[32m+[m[32m    var isEcho = message.is_echo;[m
[32m+[m[32m    var mess